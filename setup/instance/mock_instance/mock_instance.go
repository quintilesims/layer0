// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/quintilesims/layer0/setup/instance (interfaces: Instance)

package mock_instance

import (
	s3iface "github.com/aws/aws-sdk-go/service/s3/s3iface"
	gomock "github.com/golang/mock/gomock"
)

// Mock of Instance interface
type MockInstance struct {
	ctrl     *gomock.Controller
	recorder *_MockInstanceRecorder
}

// Recorder for MockInstance (not exported)
type _MockInstanceRecorder struct {
	mock *MockInstance
}

func NewMockInstance(ctrl *gomock.Controller) *MockInstance {
	mock := &MockInstance{ctrl: ctrl}
	mock.recorder = &_MockInstanceRecorder{mock}
	return mock
}

func (_m *MockInstance) EXPECT() *_MockInstanceRecorder {
	return _m.recorder
}

func (_m *MockInstance) Apply(_param0 bool) error {
	ret := _m.ctrl.Call(_m, "Apply", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockInstanceRecorder) Apply(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Apply", arg0)
}

func (_m *MockInstance) Destroy(_param0 bool) error {
	ret := _m.ctrl.Call(_m, "Destroy", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockInstanceRecorder) Destroy(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Destroy", arg0)
}

func (_m *MockInstance) Init(_param0 string, _param1 map[string]interface{}) error {
	ret := _m.ctrl.Call(_m, "Init", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockInstanceRecorder) Init(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Init", arg0, arg1)
}

func (_m *MockInstance) Output(_param0 string) (string, error) {
	ret := _m.ctrl.Call(_m, "Output", _param0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockInstanceRecorder) Output(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Output", arg0)
}

func (_m *MockInstance) Plan() error {
	ret := _m.ctrl.Call(_m, "Plan")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockInstanceRecorder) Plan() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Plan")
}

func (_m *MockInstance) Pull(_param0 s3iface.S3API) error {
	ret := _m.ctrl.Call(_m, "Pull", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockInstanceRecorder) Pull(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Pull", arg0)
}

func (_m *MockInstance) Push(_param0 s3iface.S3API) error {
	ret := _m.ctrl.Call(_m, "Push", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockInstanceRecorder) Push(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Push", arg0)
}

func (_m *MockInstance) Upgrade(_param0 string, _param1 bool) error {
	ret := _m.ctrl.Call(_m, "Upgrade", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockInstanceRecorder) Upgrade(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Upgrade", arg0, arg1)
}
