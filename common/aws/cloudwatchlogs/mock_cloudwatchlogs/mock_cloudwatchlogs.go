// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/quintilesims/layer0/common/aws/cloudwatchlogs (interfaces: Provider)

package mock_cloudwatchlogs

import (
	gomock "github.com/golang/mock/gomock"
	cloudwatchlogs "github.com/quintilesims/layer0/common/aws/cloudwatchlogs"
)

// Mock of Provider interface
type MockProvider struct {
	ctrl     *gomock.Controller
	recorder *_MockProviderRecorder
}

// Recorder for MockProvider (not exported)
type _MockProviderRecorder struct {
	mock *MockProvider
}

func NewMockProvider(ctrl *gomock.Controller) *MockProvider {
	mock := &MockProvider{ctrl: ctrl}
	mock.recorder = &_MockProviderRecorder{mock}
	return mock
}

func (_m *MockProvider) EXPECT() *_MockProviderRecorder {
	return _m.recorder
}

func (_m *MockProvider) CreateLogGroup(_param0 string) error {
	ret := _m.ctrl.Call(_m, "CreateLogGroup", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockProviderRecorder) CreateLogGroup(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateLogGroup", arg0)
}

func (_m *MockProvider) DeleteLogGroup(_param0 string) error {
	ret := _m.ctrl.Call(_m, "DeleteLogGroup", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockProviderRecorder) DeleteLogGroup(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteLogGroup", arg0)
}

func (_m *MockProvider) DescribeLogGroups(_param0 string, _param1 *string) ([]*cloudwatchlogs.LogGroup, error) {
	ret := _m.ctrl.Call(_m, "DescribeLogGroups", _param0, _param1)
	ret0, _ := ret[0].([]*cloudwatchlogs.LogGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockProviderRecorder) DescribeLogGroups(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeLogGroups", arg0, arg1)
}

func (_m *MockProvider) DescribeLogStreams(_param0 string, _param1 string) ([]*cloudwatchlogs.LogStream, error) {
	ret := _m.ctrl.Call(_m, "DescribeLogStreams", _param0, _param1)
	ret0, _ := ret[0].([]*cloudwatchlogs.LogStream)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockProviderRecorder) DescribeLogStreams(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeLogStreams", arg0, arg1)
}

func (_m *MockProvider) FilterLogEvents(_param0 *string, _param1 *string, _param2 *string, _param3 []*string, _param4 *int64, _param5 *int64, _param6 *bool) ([]*cloudwatchlogs.FilteredLogEvent, []*cloudwatchlogs.SearchedLogStream, error) {
	ret := _m.ctrl.Call(_m, "FilterLogEvents", _param0, _param1, _param2, _param3, _param4, _param5, _param6)
	ret0, _ := ret[0].([]*cloudwatchlogs.FilteredLogEvent)
	ret1, _ := ret[1].([]*cloudwatchlogs.SearchedLogStream)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockProviderRecorder) FilterLogEvents(arg0, arg1, arg2, arg3, arg4, arg5, arg6 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "FilterLogEvents", arg0, arg1, arg2, arg3, arg4, arg5, arg6)
}

func (_m *MockProvider) GetLogEvents(_param0 string, _param1 string, _param2 int64, _param3 int64, _param4 int64) ([]*cloudwatchlogs.OutputLogEvent, error) {
	ret := _m.ctrl.Call(_m, "GetLogEvents", _param0, _param1, _param2, _param3, _param4)
	ret0, _ := ret[0].([]*cloudwatchlogs.OutputLogEvent)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockProviderRecorder) GetLogEvents(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetLogEvents", arg0, arg1, arg2, arg3, arg4)
}
