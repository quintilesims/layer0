// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/quintilesims/layer0/common/aws/iam (interfaces: Provider)

package mock_iam

import (
	gomock "github.com/golang/mock/gomock"
	iam "github.com/quintilesims/layer0/common/aws/iam"
)

// Mock of Provider interface
type MockProvider struct {
	ctrl     *gomock.Controller
	recorder *_MockProviderRecorder
}

// Recorder for MockProvider (not exported)
type _MockProviderRecorder struct {
	mock *MockProvider
}

func NewMockProvider(ctrl *gomock.Controller) *MockProvider {
	mock := &MockProvider{ctrl: ctrl}
	mock.recorder = &_MockProviderRecorder{mock}
	return mock
}

func (_m *MockProvider) EXPECT() *_MockProviderRecorder {
	return _m.recorder
}

func (_m *MockProvider) CreateRole(_param0 string, _param1 string) (*iam.Role, error) {
	ret := _m.ctrl.Call(_m, "CreateRole", _param0, _param1)
	ret0, _ := ret[0].(*iam.Role)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockProviderRecorder) CreateRole(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateRole", arg0, arg1)
}

func (_m *MockProvider) DeleteRole(_param0 string) error {
	ret := _m.ctrl.Call(_m, "DeleteRole", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockProviderRecorder) DeleteRole(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteRole", arg0)
}

func (_m *MockProvider) DeleteRolePolicy(_param0 string, _param1 string) error {
	ret := _m.ctrl.Call(_m, "DeleteRolePolicy", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockProviderRecorder) DeleteRolePolicy(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteRolePolicy", arg0, arg1)
}

func (_m *MockProvider) DeleteServerCertificate(_param0 string) error {
	ret := _m.ctrl.Call(_m, "DeleteServerCertificate", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockProviderRecorder) DeleteServerCertificate(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteServerCertificate", arg0)
}

func (_m *MockProvider) GetAccountId() (string, error) {
	ret := _m.ctrl.Call(_m, "GetAccountId")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockProviderRecorder) GetAccountId() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetAccountId")
}

func (_m *MockProvider) GetRole(_param0 string) (*iam.Role, error) {
	ret := _m.ctrl.Call(_m, "GetRole", _param0)
	ret0, _ := ret[0].(*iam.Role)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockProviderRecorder) GetRole(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetRole", arg0)
}

func (_m *MockProvider) GetUser(_param0 *string) (*iam.User, error) {
	ret := _m.ctrl.Call(_m, "GetUser", _param0)
	ret0, _ := ret[0].(*iam.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockProviderRecorder) GetUser(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetUser", arg0)
}

func (_m *MockProvider) ListCertificates(_param0 string) ([]*iam.ServerCertificateMetadata, error) {
	ret := _m.ctrl.Call(_m, "ListCertificates", _param0)
	ret0, _ := ret[0].([]*iam.ServerCertificateMetadata)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockProviderRecorder) ListCertificates(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListCertificates", arg0)
}

func (_m *MockProvider) ListRolePolicies(_param0 string) ([]*string, error) {
	ret := _m.ctrl.Call(_m, "ListRolePolicies", _param0)
	ret0, _ := ret[0].([]*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockProviderRecorder) ListRolePolicies(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListRolePolicies", arg0)
}

func (_m *MockProvider) ListRoles() ([]*string, error) {
	ret := _m.ctrl.Call(_m, "ListRoles")
	ret0, _ := ret[0].([]*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockProviderRecorder) ListRoles() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListRoles")
}

func (_m *MockProvider) PutRolePolicy(_param0 string, _param1 string) error {
	ret := _m.ctrl.Call(_m, "PutRolePolicy", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockProviderRecorder) PutRolePolicy(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PutRolePolicy", arg0, arg1)
}

func (_m *MockProvider) UploadServerCertificate(_param0 string, _param1 string, _param2 string, _param3 string, _param4 *string) (*iam.ServerCertificateMetadata, error) {
	ret := _m.ctrl.Call(_m, "UploadServerCertificate", _param0, _param1, _param2, _param3, _param4)
	ret0, _ := ret[0].(*iam.ServerCertificateMetadata)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockProviderRecorder) UploadServerCertificate(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "UploadServerCertificate", arg0, arg1, arg2, arg3, arg4)
}
