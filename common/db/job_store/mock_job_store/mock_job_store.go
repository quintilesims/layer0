// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/quintilesims/layer0/common/db/job_store (interfaces: JobStore)

package mock_job_store

import (
	models "github.com/quintilesims/layer0/common/models"
	types "github.com/quintilesims/layer0/common/types"
	gomock "github.com/golang/mock/gomock"
)

// Mock of JobStore interface
type MockJobStore struct {
	ctrl     *gomock.Controller
	recorder *_MockJobStoreRecorder
}

// Recorder for MockJobStore (not exported)
type _MockJobStoreRecorder struct {
	mock *MockJobStore
}

func NewMockJobStore(ctrl *gomock.Controller) *MockJobStore {
	mock := &MockJobStore{ctrl: ctrl}
	mock.recorder = &_MockJobStoreRecorder{mock}
	return mock
}

func (_m *MockJobStore) EXPECT() *_MockJobStoreRecorder {
	return _m.recorder
}

func (_m *MockJobStore) Delete(_param0 string) error {
	ret := _m.ctrl.Call(_m, "Delete", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockJobStoreRecorder) Delete(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Delete", arg0)
}

func (_m *MockJobStore) Init() error {
	ret := _m.ctrl.Call(_m, "Init")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockJobStoreRecorder) Init() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Init")
}

func (_m *MockJobStore) Insert(_param0 *models.Job) error {
	ret := _m.ctrl.Call(_m, "Insert", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockJobStoreRecorder) Insert(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Insert", arg0)
}

func (_m *MockJobStore) SelectAll() ([]*models.Job, error) {
	ret := _m.ctrl.Call(_m, "SelectAll")
	ret0, _ := ret[0].([]*models.Job)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockJobStoreRecorder) SelectAll() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SelectAll")
}

func (_m *MockJobStore) SelectByID(_param0 string) (*models.Job, error) {
	ret := _m.ctrl.Call(_m, "SelectByID", _param0)
	ret0, _ := ret[0].(*models.Job)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockJobStoreRecorder) SelectByID(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SelectByID", arg0)
}

func (_m *MockJobStore) UpdateJobStatus(_param0 string, _param1 types.JobStatus) error {
	ret := _m.ctrl.Call(_m, "UpdateJobStatus", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockJobStoreRecorder) UpdateJobStatus(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "UpdateJobStatus", arg0, arg1)
}
