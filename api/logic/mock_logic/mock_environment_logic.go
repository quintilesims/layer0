// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/quintilesims/layer0/api/logic (interfaces: EnvironmentLogic)

package mock_logic

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/quintilesims/layer0/common/models"
)

// Mock of EnvironmentLogic interface
type MockEnvironmentLogic struct {
	ctrl     *gomock.Controller
	recorder *_MockEnvironmentLogicRecorder
}

// Recorder for MockEnvironmentLogic (not exported)
type _MockEnvironmentLogicRecorder struct {
	mock *MockEnvironmentLogic
}

func NewMockEnvironmentLogic(ctrl *gomock.Controller) *MockEnvironmentLogic {
	mock := &MockEnvironmentLogic{ctrl: ctrl}
	mock.recorder = &_MockEnvironmentLogicRecorder{mock}
	return mock
}

func (_m *MockEnvironmentLogic) EXPECT() *_MockEnvironmentLogicRecorder {
	return _m.recorder
}

func (_m *MockEnvironmentLogic) CanCreateEnvironment(_param0 models.CreateEnvironmentRequest) (bool, error) {
	ret := _m.ctrl.Call(_m, "CanCreateEnvironment", _param0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockEnvironmentLogicRecorder) CanCreateEnvironment(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CanCreateEnvironment", arg0)
}

func (_m *MockEnvironmentLogic) CreateEnvironment(_param0 models.CreateEnvironmentRequest) (*models.Environment, error) {
	ret := _m.ctrl.Call(_m, "CreateEnvironment", _param0)
	ret0, _ := ret[0].(*models.Environment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockEnvironmentLogicRecorder) CreateEnvironment(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateEnvironment", arg0)
}

func (_m *MockEnvironmentLogic) CreateEnvironmentLink(_param0 string, _param1 string) error {
	ret := _m.ctrl.Call(_m, "CreateEnvironmentLink", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockEnvironmentLogicRecorder) CreateEnvironmentLink(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateEnvironmentLink", arg0, arg1)
}

func (_m *MockEnvironmentLogic) DeleteEnvironment(_param0 string) error {
	ret := _m.ctrl.Call(_m, "DeleteEnvironment", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockEnvironmentLogicRecorder) DeleteEnvironment(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteEnvironment", arg0)
}

func (_m *MockEnvironmentLogic) DeleteEnvironmentLink(_param0 string, _param1 string) error {
	ret := _m.ctrl.Call(_m, "DeleteEnvironmentLink", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockEnvironmentLogicRecorder) DeleteEnvironmentLink(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteEnvironmentLink", arg0, arg1)
}

func (_m *MockEnvironmentLogic) GetEnvironment(_param0 string) (*models.Environment, error) {
	ret := _m.ctrl.Call(_m, "GetEnvironment", _param0)
	ret0, _ := ret[0].(*models.Environment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockEnvironmentLogicRecorder) GetEnvironment(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetEnvironment", arg0)
}

func (_m *MockEnvironmentLogic) ListEnvironments() ([]*models.EnvironmentSummary, error) {
	ret := _m.ctrl.Call(_m, "ListEnvironments")
	ret0, _ := ret[0].([]*models.EnvironmentSummary)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockEnvironmentLogicRecorder) ListEnvironments() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListEnvironments")
}

func (_m *MockEnvironmentLogic) UpdateEnvironment(_param0 string, _param1 int) (*models.Environment, error) {
	ret := _m.ctrl.Call(_m, "UpdateEnvironment", _param0, _param1)
	ret0, _ := ret[0].(*models.Environment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockEnvironmentLogicRecorder) UpdateEnvironment(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "UpdateEnvironment", arg0, arg1)
}
