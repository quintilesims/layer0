// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/quintilesims/layer0/api/logic (interfaces: JobLogic)

package mock_logic

import (
	models "github.com/quintilesims/layer0/common/models"
	gomock "github.com/golang/mock/gomock"
	types "github.com/quintilesims/layer0/common/types"
)

// Mock of JobLogic interface
type MockJobLogic struct {
	ctrl     *gomock.Controller
	recorder *_MockJobLogicRecorder
}

// Recorder for MockJobLogic (not exported)
type _MockJobLogicRecorder struct {
	mock *MockJobLogic
}

func NewMockJobLogic(ctrl *gomock.Controller) *MockJobLogic {
	mock := &MockJobLogic{ctrl: ctrl}
	mock.recorder = &_MockJobLogicRecorder{mock}
	return mock
}

func (_m *MockJobLogic) EXPECT() *_MockJobLogicRecorder {
	return _m.recorder
}

func (_m *MockJobLogic) CreateJob(_param0 types.JobType, _param1 interface{}) (*models.Job, error) {
	ret := _m.ctrl.Call(_m, "CreateJob", _param0, _param1)
	ret0, _ := ret[0].(*models.Job)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockJobLogicRecorder) CreateJob(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateJob", arg0, arg1)
}

func (_m *MockJobLogic) Delete(_param0 string) error {
	ret := _m.ctrl.Call(_m, "Delete", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockJobLogicRecorder) Delete(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Delete", arg0)
}

func (_m *MockJobLogic) GetJob(_param0 string) (*models.Job, error) {
	ret := _m.ctrl.Call(_m, "GetJob", _param0)
	ret0, _ := ret[0].(*models.Job)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockJobLogicRecorder) GetJob(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetJob", arg0)
}

func (_m *MockJobLogic) ListJobs() ([]*models.Job, error) {
	ret := _m.ctrl.Call(_m, "ListJobs")
	ret0, _ := ret[0].([]*models.Job)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockJobLogicRecorder) ListJobs() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListJobs")
}
