// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/quintilesims/layer0/api/logic (interfaces: DeployLogic)

package mock_logic

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/quintilesims/layer0/common/models"
)

// Mock of DeployLogic interface
type MockDeployLogic struct {
	ctrl     *gomock.Controller
	recorder *_MockDeployLogicRecorder
}

// Recorder for MockDeployLogic (not exported)
type _MockDeployLogicRecorder struct {
	mock *MockDeployLogic
}

func NewMockDeployLogic(ctrl *gomock.Controller) *MockDeployLogic {
	mock := &MockDeployLogic{ctrl: ctrl}
	mock.recorder = &_MockDeployLogicRecorder{mock}
	return mock
}

func (_m *MockDeployLogic) EXPECT() *_MockDeployLogicRecorder {
	return _m.recorder
}

func (_m *MockDeployLogic) CreateDeploy(_param0 models.CreateDeployRequest) (*models.Deploy, error) {
	ret := _m.ctrl.Call(_m, "CreateDeploy", _param0)
	ret0, _ := ret[0].(*models.Deploy)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockDeployLogicRecorder) CreateDeploy(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateDeploy", arg0)
}

func (_m *MockDeployLogic) DeleteDeploy(_param0 string) error {
	ret := _m.ctrl.Call(_m, "DeleteDeploy", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockDeployLogicRecorder) DeleteDeploy(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteDeploy", arg0)
}

func (_m *MockDeployLogic) GetDeploy(_param0 string) (*models.Deploy, error) {
	ret := _m.ctrl.Call(_m, "GetDeploy", _param0)
	ret0, _ := ret[0].(*models.Deploy)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockDeployLogicRecorder) GetDeploy(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetDeploy", arg0)
}

func (_m *MockDeployLogic) ListDeploys() ([]*models.DeploySummary, error) {
	ret := _m.ctrl.Call(_m, "ListDeploys")
	ret0, _ := ret[0].([]*models.DeploySummary)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockDeployLogicRecorder) ListDeploys() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListDeploys")
}
