// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/quintilesims/layer0/api/entity (interfaces: Provider)

package mock_entity

import (
	gomock "github.com/golang/mock/gomock"
	entity "github.com/quintilesims/layer0/api/entity"
)

// Mock of Provider interface
type MockProvider struct {
	ctrl     *gomock.Controller
	recorder *_MockProviderRecorder
}

// Recorder for MockProvider (not exported)
type _MockProviderRecorder struct {
	mock *MockProvider
}

func NewMockProvider(ctrl *gomock.Controller) *MockProvider {
	mock := &MockProvider{ctrl: ctrl}
	mock.recorder = &_MockProviderRecorder{mock}
	return mock
}

func (_m *MockProvider) EXPECT() *_MockProviderRecorder {
	return _m.recorder
}

func (_m *MockProvider) GetEnvironment(_param0 string) entity.Environment {
	ret := _m.ctrl.Call(_m, "GetEnvironment", _param0)
	ret0, _ := ret[0].(entity.Environment)
	return ret0
}

func (_mr *_MockProviderRecorder) GetEnvironment(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetEnvironment", arg0)
}

func (_m *MockProvider) ListEnvironmentIDs() ([]string, error) {
	ret := _m.ctrl.Call(_m, "ListEnvironmentIDs")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockProviderRecorder) ListEnvironmentIDs() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListEnvironmentIDs")
}
