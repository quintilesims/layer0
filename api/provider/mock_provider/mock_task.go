// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/quintilesims/layer0/api/provider (interfaces: TaskProvider)

package mock_provider

import (
	time "time"

	gomock "github.com/golang/mock/gomock"
	models "github.com/quintilesims/layer0/common/models"
)

// Mock of TaskProvider interface
type MockTaskProvider struct {
	ctrl     *gomock.Controller
	recorder *_MockTaskProviderRecorder
}

// Recorder for MockTaskProvider (not exported)
type _MockTaskProviderRecorder struct {
	mock *MockTaskProvider
}

func NewMockTaskProvider(ctrl *gomock.Controller) *MockTaskProvider {
	mock := &MockTaskProvider{ctrl: ctrl}
	mock.recorder = &_MockTaskProviderRecorder{mock}
	return mock
}

func (_m *MockTaskProvider) EXPECT() *_MockTaskProviderRecorder {
	return _m.recorder
}

func (_m *MockTaskProvider) Create(_param0 models.CreateTaskRequest) (string, error) {
	ret := _m.ctrl.Call(_m, "Create", _param0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockTaskProviderRecorder) Create(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Create", arg0)
}

func (_m *MockTaskProvider) Delete(_param0 string) error {
	ret := _m.ctrl.Call(_m, "Delete", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockTaskProviderRecorder) Delete(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Delete", arg0)
}

func (_m *MockTaskProvider) List() ([]models.TaskSummary, error) {
	ret := _m.ctrl.Call(_m, "List")
	ret0, _ := ret[0].([]models.TaskSummary)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockTaskProviderRecorder) List() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "List")
}

func (_m *MockTaskProvider) Logs(_param0 string, _param1 int, _param2 time.Time, _param3 time.Time) ([]models.LogFile, error) {
	ret := _m.ctrl.Call(_m, "Logs", _param0, _param1, _param2, _param3)
	ret0, _ := ret[0].([]models.LogFile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockTaskProviderRecorder) Logs(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Logs", arg0, arg1, arg2, arg3)
}

func (_m *MockTaskProvider) Read(_param0 string) (*models.Task, error) {
	ret := _m.ctrl.Call(_m, "Read", _param0)
	ret0, _ := ret[0].(*models.Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockTaskProviderRecorder) Read(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Read", arg0)
}
