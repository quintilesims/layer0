// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/quintilesims/layer0/api/data (interfaces: TagData)

package mock_data

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/quintilesims/layer0/common/models"
)

// Mock of TagData interface
type MockTagData struct {
	ctrl     *gomock.Controller
	recorder *_MockTagDataRecorder
}

// Recorder for MockTagData (not exported)
type _MockTagDataRecorder struct {
	mock *MockTagData
}

func NewMockTagData(ctrl *gomock.Controller) *MockTagData {
	mock := &MockTagData{ctrl: ctrl}
	mock.recorder = &_MockTagDataRecorder{mock}
	return mock
}

func (_m *MockTagData) EXPECT() *_MockTagDataRecorder {
	return _m.recorder
}

func (_m *MockTagData) Delete(_param0 models.EntityTag) error {
	ret := _m.ctrl.Call(_m, "Delete", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockTagDataRecorder) Delete(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Delete", arg0)
}

func (_m *MockTagData) Find(_param0 string, _param1 map[string]string) ([]models.EntityWithTags, error) {
	ret := _m.ctrl.Call(_m, "Find", _param0, _param1)
	ret0, _ := ret[0].([]models.EntityWithTags)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockTagDataRecorder) Find(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Find", arg0, arg1)
}

func (_m *MockTagData) GetTags(_param0 map[string]string) ([]models.EntityWithTags, error) {
	ret := _m.ctrl.Call(_m, "GetTags", _param0)
	ret0, _ := ret[0].([]models.EntityWithTags)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockTagDataRecorder) GetTags(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetTags", arg0)
}

func (_m *MockTagData) Make(_param0 models.EntityTag) error {
	ret := _m.ctrl.Call(_m, "Make", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockTagDataRecorder) Make(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Make", arg0)
}
