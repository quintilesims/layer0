// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/quintilesims/layer0/api/backend/ecs (interfaces: ClusterScaler)

package mock_ecsbackend

import (
	gomock "github.com/golang/mock/gomock"
	id "github.com/quintilesims/layer0/api/backend/ecs/id"
)

// Mock of ClusterScaler interface
type MockClusterScaler struct {
	ctrl     *gomock.Controller
	recorder *_MockClusterScalerRecorder
}

// Recorder for MockClusterScaler (not exported)
type _MockClusterScalerRecorder struct {
	mock *MockClusterScaler
}

func NewMockClusterScaler(ctrl *gomock.Controller) *MockClusterScaler {
	mock := &MockClusterScaler{ctrl: ctrl}
	mock.recorder = &_MockClusterScalerRecorder{mock}
	return mock
}

func (_m *MockClusterScaler) EXPECT() *_MockClusterScalerRecorder {
	return _m.recorder
}

func (_m *MockClusterScaler) TriggerScalingAlgorithm(_param0 id.ECSEnvironmentID, _param1 *id.ECSDeployID, _param2 int) (int, bool, error) {
	ret := _m.ctrl.Call(_m, "TriggerScalingAlgorithm", _param0, _param1, _param2)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockClusterScalerRecorder) TriggerScalingAlgorithm(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "TriggerScalingAlgorithm", arg0, arg1, arg2)
}
