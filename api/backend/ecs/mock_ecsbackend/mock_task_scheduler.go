// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/quintilesims/layer0/api/backend/ecs (interfaces: TaskScheduler)

package mock_ecsbackend

import (
	gomock "github.com/golang/mock/gomock"
	id "github.com/quintilesims/layer0/api/backend/ecs/id"
	ecs "github.com/quintilesims/layer0/common/aws/ecs"
	models "github.com/quintilesims/layer0/common/models"
)

// Mock of TaskScheduler interface
type MockTaskScheduler struct {
	ctrl     *gomock.Controller
	recorder *_MockTaskSchedulerRecorder
}

// Recorder for MockTaskScheduler (not exported)
type _MockTaskSchedulerRecorder struct {
	mock *MockTaskScheduler
}

func NewMockTaskScheduler(ctrl *gomock.Controller) *MockTaskScheduler {
	mock := &MockTaskScheduler{ctrl: ctrl}
	mock.recorder = &_MockTaskSchedulerRecorder{mock}
	return mock
}

func (_m *MockTaskScheduler) EXPECT() *_MockTaskSchedulerRecorder {
	return _m.recorder
}

func (_m *MockTaskScheduler) AddTask(_param0 id.ECSTaskID, _param1 id.ECSDeployID, _param2 id.ECSEnvironmentID, _param3 int, _param4 []models.ContainerOverride) {
	_m.ctrl.Call(_m, "AddTask", _param0, _param1, _param2, _param3, _param4)
}

func (_mr *_MockTaskSchedulerRecorder) AddTask(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "AddTask", arg0, arg1, arg2, arg3, arg4)
}

func (_m *MockTaskScheduler) DeleteTask(_param0 id.ECSTaskID) {
	_m.ctrl.Call(_m, "DeleteTask", _param0)
}

func (_mr *_MockTaskSchedulerRecorder) DeleteTask(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteTask", arg0)
}

func (_m *MockTaskScheduler) GetTask(_param0 id.ECSTaskID) []*ecs.Task {
	ret := _m.ctrl.Call(_m, "GetTask", _param0)
	ret0, _ := ret[0].([]*ecs.Task)
	return ret0
}

func (_mr *_MockTaskSchedulerRecorder) GetTask(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetTask", arg0)
}

func (_m *MockTaskScheduler) ListTasks() []*ecs.Task {
	ret := _m.ctrl.Call(_m, "ListTasks")
	ret0, _ := ret[0].([]*ecs.Task)
	return ret0
}

func (_mr *_MockTaskSchedulerRecorder) ListTasks() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListTasks")
}
