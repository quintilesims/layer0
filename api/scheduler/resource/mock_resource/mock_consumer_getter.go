// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/quintilesims/layer0/api/scheduler/resource (interfaces: ConsumerGetter)

// Package mock_resource is a generated GoMock package.
package mock_resource

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	resource "github.com/quintilesims/layer0/api/scheduler/resource"
)

// MockConsumerGetter is a mock of ConsumerGetter interface
type MockConsumerGetter struct {
	ctrl     *gomock.Controller
	recorder *MockConsumerGetterMockRecorder
}

// MockConsumerGetterMockRecorder is the mock recorder for MockConsumerGetter
type MockConsumerGetterMockRecorder struct {
	mock *MockConsumerGetter
}

// NewMockConsumerGetter creates a new mock instance
func NewMockConsumerGetter(ctrl *gomock.Controller) *MockConsumerGetter {
	mock := &MockConsumerGetter{ctrl: ctrl}
	mock.recorder = &MockConsumerGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockConsumerGetter) EXPECT() *MockConsumerGetterMockRecorder {
	return m.recorder
}

// GetConsumers mocks base method
func (m *MockConsumerGetter) GetConsumers(arg0 string) ([]resource.ResourceConsumer, error) {
	ret := m.ctrl.Call(m, "GetConsumers", arg0)
	ret0, _ := ret[0].([]resource.ResourceConsumer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConsumers indicates an expected call of GetConsumers
func (mr *MockConsumerGetterMockRecorder) GetConsumers(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConsumers", reflect.TypeOf((*MockConsumerGetter)(nil).GetConsumers), arg0)
}
